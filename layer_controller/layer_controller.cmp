	component layer_controller is
		port (
			clk_clk          : in    std_logic                     := 'X';             -- clk
			leds_export      : out   std_logic_vector(7 downto 0);                     -- export
			n1i1_export      : out   std_logic_vector(8 downto 0);                     -- export
			n1i2_export      : out   std_logic_vector(8 downto 0);                     -- export
			n1i3_export      : out   std_logic_vector(8 downto 0);                     -- export
			n1ninputs_export : out   std_logic_vector(2 downto 0);                     -- export
			n1output_export  : in    std_logic_vector(8 downto 0)  := (others => 'X'); -- export
			n1ready_export   : in    std_logic                     := 'X';             -- export
			n1start_export   : out   std_logic;                                        -- export
			n1w1_export      : out   std_logic_vector(16 downto 0);                    -- export
			n1w2_export      : out   std_logic_vector(16 downto 0);                    -- export
			n1w3_export      : out   std_logic_vector(16 downto 0);                    -- export
			reset_reset      : in    std_logic                     := 'X';             -- reset
			sdram_clk_clk    : out   std_logic;                                        -- clk
			sdram_wire_addr  : out   std_logic_vector(12 downto 0);                    -- addr
			sdram_wire_ba    : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_wire_cas_n : out   std_logic;                                        -- cas_n
			sdram_wire_cke   : out   std_logic;                                        -- cke
			sdram_wire_cs_n  : out   std_logic;                                        -- cs_n
			sdram_wire_dq    : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_wire_dqm   : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_wire_ras_n : out   std_logic;                                        -- ras_n
			sdram_wire_we_n  : out   std_logic                                         -- we_n
		);
	end component layer_controller;

